// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.24.3
// source: pkg/grpc/valuations.proto

package grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	ValuationsService_GetAllValuations_FullMethodName          = "/valuations.ValuationsService/GetAllValuations"
	ValuationsService_GetUserDeviceValuation_FullMethodName    = "/valuations.ValuationsService/GetUserDeviceValuation"
	ValuationsService_GetUserDeviceOffer_FullMethodName        = "/valuations.ValuationsService/GetUserDeviceOffer"
	ValuationsService_GetAllUserDeviceValuation_FullMethodName = "/valuations.ValuationsService/GetAllUserDeviceValuation"
)

// ValuationsServiceClient is the client API for ValuationsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ValuationsServiceClient interface {
	GetAllValuations(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ValuationResponse, error)
	GetUserDeviceValuation(ctx context.Context, in *DeviceValuationRequest, opts ...grpc.CallOption) (*DeviceValuation, error)
	GetUserDeviceOffer(ctx context.Context, in *DeviceOfferRequest, opts ...grpc.CallOption) (*DeviceOffer, error)
	GetAllUserDeviceValuation(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ValuationResponse, error)
}

type valuationsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewValuationsServiceClient(cc grpc.ClientConnInterface) ValuationsServiceClient {
	return &valuationsServiceClient{cc}
}

func (c *valuationsServiceClient) GetAllValuations(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ValuationResponse, error) {
	out := new(ValuationResponse)
	err := c.cc.Invoke(ctx, ValuationsService_GetAllValuations_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *valuationsServiceClient) GetUserDeviceValuation(ctx context.Context, in *DeviceValuationRequest, opts ...grpc.CallOption) (*DeviceValuation, error) {
	out := new(DeviceValuation)
	err := c.cc.Invoke(ctx, ValuationsService_GetUserDeviceValuation_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *valuationsServiceClient) GetUserDeviceOffer(ctx context.Context, in *DeviceOfferRequest, opts ...grpc.CallOption) (*DeviceOffer, error) {
	out := new(DeviceOffer)
	err := c.cc.Invoke(ctx, ValuationsService_GetUserDeviceOffer_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *valuationsServiceClient) GetAllUserDeviceValuation(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ValuationResponse, error) {
	out := new(ValuationResponse)
	err := c.cc.Invoke(ctx, ValuationsService_GetAllUserDeviceValuation_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ValuationsServiceServer is the server API for ValuationsService service.
// All implementations must embed UnimplementedValuationsServiceServer
// for forward compatibility
type ValuationsServiceServer interface {
	GetAllValuations(context.Context, *emptypb.Empty) (*ValuationResponse, error)
	GetUserDeviceValuation(context.Context, *DeviceValuationRequest) (*DeviceValuation, error)
	GetUserDeviceOffer(context.Context, *DeviceOfferRequest) (*DeviceOffer, error)
	GetAllUserDeviceValuation(context.Context, *emptypb.Empty) (*ValuationResponse, error)
	mustEmbedUnimplementedValuationsServiceServer()
}

// UnimplementedValuationsServiceServer must be embedded to have forward compatible implementations.
type UnimplementedValuationsServiceServer struct {
}

func (UnimplementedValuationsServiceServer) GetAllValuations(context.Context, *emptypb.Empty) (*ValuationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllValuations not implemented")
}
func (UnimplementedValuationsServiceServer) GetUserDeviceValuation(context.Context, *DeviceValuationRequest) (*DeviceValuation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserDeviceValuation not implemented")
}
func (UnimplementedValuationsServiceServer) GetUserDeviceOffer(context.Context, *DeviceOfferRequest) (*DeviceOffer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserDeviceOffer not implemented")
}
func (UnimplementedValuationsServiceServer) GetAllUserDeviceValuation(context.Context, *emptypb.Empty) (*ValuationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllUserDeviceValuation not implemented")
}
func (UnimplementedValuationsServiceServer) mustEmbedUnimplementedValuationsServiceServer() {}

// UnsafeValuationsServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ValuationsServiceServer will
// result in compilation errors.
type UnsafeValuationsServiceServer interface {
	mustEmbedUnimplementedValuationsServiceServer()
}

func RegisterValuationsServiceServer(s grpc.ServiceRegistrar, srv ValuationsServiceServer) {
	s.RegisterService(&ValuationsService_ServiceDesc, srv)
}

func _ValuationsService_GetAllValuations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValuationsServiceServer).GetAllValuations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ValuationsService_GetAllValuations_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValuationsServiceServer).GetAllValuations(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ValuationsService_GetUserDeviceValuation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeviceValuationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValuationsServiceServer).GetUserDeviceValuation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ValuationsService_GetUserDeviceValuation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValuationsServiceServer).GetUserDeviceValuation(ctx, req.(*DeviceValuationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ValuationsService_GetUserDeviceOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeviceOfferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValuationsServiceServer).GetUserDeviceOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ValuationsService_GetUserDeviceOffer_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValuationsServiceServer).GetUserDeviceOffer(ctx, req.(*DeviceOfferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ValuationsService_GetAllUserDeviceValuation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValuationsServiceServer).GetAllUserDeviceValuation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ValuationsService_GetAllUserDeviceValuation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValuationsServiceServer).GetAllUserDeviceValuation(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

// ValuationsService_ServiceDesc is the grpc.ServiceDesc for ValuationsService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ValuationsService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "valuations.ValuationsService",
	HandlerType: (*ValuationsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAllValuations",
			Handler:    _ValuationsService_GetAllValuations_Handler,
		},
		{
			MethodName: "GetUserDeviceValuation",
			Handler:    _ValuationsService_GetUserDeviceValuation_Handler,
		},
		{
			MethodName: "GetUserDeviceOffer",
			Handler:    _ValuationsService_GetUserDeviceOffer_Handler,
		},
		{
			MethodName: "GetAllUserDeviceValuation",
			Handler:    _ValuationsService_GetAllUserDeviceValuation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/grpc/valuations.proto",
}
