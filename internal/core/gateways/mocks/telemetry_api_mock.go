// Code generated by MockGen. DO NOT EDIT.
// Source: telemetry_api.go
//
// Generated by this command:
//
//	mockgen -source telemetry_api.go -destination mocks/telemetry_api_mock.go -package mock_gateways
//

// Package mock_gateways is a generated GoMock package.
package mock_gateways

import (
	reflect "reflect"

	models "github.com/DIMO-Network/valuations-api/internal/core/models"
	gomock "go.uber.org/mock/gomock"
)

// MockTelemetryAPI is a mock of TelemetryAPI interface.
type MockTelemetryAPI struct {
	ctrl     *gomock.Controller
	recorder *MockTelemetryAPIMockRecorder
}

// MockTelemetryAPIMockRecorder is the mock recorder for MockTelemetryAPI.
type MockTelemetryAPIMockRecorder struct {
	mock *MockTelemetryAPI
}

// NewMockTelemetryAPI creates a new mock instance.
func NewMockTelemetryAPI(ctrl *gomock.Controller) *MockTelemetryAPI {
	mock := &MockTelemetryAPI{ctrl: ctrl}
	mock.recorder = &MockTelemetryAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTelemetryAPI) EXPECT() *MockTelemetryAPIMockRecorder {
	return m.recorder
}

// GetLatestSignals mocks base method.
func (m *MockTelemetryAPI) GetLatestSignals(tokenID uint64, authHeader string) (*models.SignalsLatest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestSignals", tokenID, authHeader)
	ret0, _ := ret[0].(*models.SignalsLatest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestSignals indicates an expected call of GetLatestSignals.
func (mr *MockTelemetryAPIMockRecorder) GetLatestSignals(tokenID, authHeader any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestSignals", reflect.TypeOf((*MockTelemetryAPI)(nil).GetLatestSignals), tokenID, authHeader)
}

// GetVinVC mocks base method.
func (m *MockTelemetryAPI) GetVinVC(tokenID uint64, authHeader string) (*models.VinVCLatest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVinVC", tokenID, authHeader)
	ret0, _ := ret[0].(*models.VinVCLatest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVinVC indicates an expected call of GetVinVC.
func (mr *MockTelemetryAPIMockRecorder) GetVinVC(tokenID, authHeader any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVinVC", reflect.TypeOf((*MockTelemetryAPI)(nil).GetVinVC), tokenID, authHeader)
}
