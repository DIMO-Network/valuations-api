// Code generated by MockGen. DO NOT EDIT.
// Source: user_device_service.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	context "context"
	reflect "reflect"

	grpc "github.com/DIMO-Network/devices-api/pkg/grpc"
	gomock "github.com/golang/mock/gomock"
)

// MockUserDeviceAPIService is a mock of UserDeviceAPIService interface.
type MockUserDeviceAPIService struct {
	ctrl     *gomock.Controller
	recorder *MockUserDeviceAPIServiceMockRecorder
}

// MockUserDeviceAPIServiceMockRecorder is the mock recorder for MockUserDeviceAPIService.
type MockUserDeviceAPIServiceMockRecorder struct {
	mock *MockUserDeviceAPIService
}

// NewMockUserDeviceAPIService creates a new mock instance.
func NewMockUserDeviceAPIService(ctrl *gomock.Controller) *MockUserDeviceAPIService {
	mock := &MockUserDeviceAPIService{ctrl: ctrl}
	mock.recorder = &MockUserDeviceAPIServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserDeviceAPIService) EXPECT() *MockUserDeviceAPIServiceMockRecorder {
	return m.recorder
}

// GetAllUserDevice mocks base method.
func (m *MockUserDeviceAPIService) GetAllUserDevice(ctx context.Context, wmi string) ([]*grpc.UserDevice, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllUserDevice", ctx, wmi)
	ret0, _ := ret[0].([]*grpc.UserDevice)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllUserDevice indicates an expected call of GetAllUserDevice.
func (mr *MockUserDeviceAPIServiceMockRecorder) GetAllUserDevice(ctx, wmi interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllUserDevice", reflect.TypeOf((*MockUserDeviceAPIService)(nil).GetAllUserDevice), ctx, wmi)
}

// GetUserDevice mocks base method.
func (m *MockUserDeviceAPIService) GetUserDevice(ctx context.Context, userDeviceID string) (*grpc.UserDevice, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserDevice", ctx, userDeviceID)
	ret0, _ := ret[0].(*grpc.UserDevice)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserDevice indicates an expected call of GetUserDevice.
func (mr *MockUserDeviceAPIServiceMockRecorder) GetUserDevice(ctx, userDeviceID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserDevice", reflect.TypeOf((*MockUserDeviceAPIService)(nil).GetUserDevice), ctx, userDeviceID)
}
