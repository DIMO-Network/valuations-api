{{- range $job := .Values.jobs }}
  {{- if $job.enabled }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "valuations-api.fullname" $ }}-{{ $job.name }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "valuations-api.labels" $ | nindent 4 }}
spec:
  schedule: {{ $job.schedule | quote }}
  concurrencyPolicy: "Forbid"
  jobTemplate:
    spec:
      backoffLimit: 1
      concurrencyPolicy: Forbid
      successfulJobsHistoryLimit: 4
      activeDeadlineSeconds: 129600  # 36 hours, set to expected max runtime + some buffer
      template:
        metadata:
          annotations:
          {{- with $.Values.podAnnotations }}
            {{- toYaml . | nindent 8 }}
          {{- end }}
          labels:
            {{- include "valuations-api.selectorLabels" $ | nindent 12 }}
        spec:
          containers:
          - name: valuations-api
            securityContext:
              {{- toYaml $.Values.securityContext | nindent 14 }}
            image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
            command: ['/bin/sh']
            {{- with $job.args }}
            args:
{{ toYaml . | indent 12 }}
            {{- end }}
            envFrom:
            - configMapRef:
                name: {{ include "valuations-api.fullname" $ }}-config
            - secretRef:
                name: {{ include "valuations-api.fullname" $ }}-secret
          restartPolicy: OnFailure
  {{ end }}
{{- end }}
